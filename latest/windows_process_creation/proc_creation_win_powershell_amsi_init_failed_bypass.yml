detect:
  events:
  - NEW_PROCESS
  - EXISTING_PROCESS
  op: and
  rules:
  - op: is windows
  - op: or
    rules:
    - op: and
      rules:
      - case sensitive: false
        op: contains
        path: event/COMMAND_LINE
        value: System.Management.Automation.AmsiUtils
      - case sensitive: false
        op: contains
        path: event/COMMAND_LINE
        value: amsiInitFailed
    - op: and
      rules:
      - case sensitive: false
        op: contains
        path: event/COMMAND_LINE
        value: '[Ref].Assembly.GetType'
      - case sensitive: false
        op: contains
        path: event/COMMAND_LINE
        value: SetValue($null,$true)
      - case sensitive: false
        op: contains
        path: event/COMMAND_LINE
        value: NonPublic,Static
respond:
- action: report
  metadata:
    author: Markus Neis, @Kostastsale
    description: Detects Request to "amsiInitFailed" that can be used to disable AMSI
      Scanning
    falsepositives:
    - Unlikely
    level: high
    references:
    - https://s3cur3th1ssh1t.github.io/Bypass_AMSI_by_manual_modification/
    - https://www.mdsec.co.uk/2018/06/exploring-powershell-amsi-and-logging-evasion/
    tags:
    - attack.defense-evasion
    - attack.t1562.001
  name: Potential AMSI Bypass Via .NET Reflection

